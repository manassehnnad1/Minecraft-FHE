/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AgeVerifier,
  AgeVerifierInterface,
} from "../../../contracts/FHEageverifier.sol/AgeVerifier";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isOldEnough",
        type: "bool",
      },
    ],
    name: "AgeVerified",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getEncryptedAge",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint32",
        name: "inputEuint32",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "verifyAge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "age",
        type: "uint32",
      },
    ],
    name: "verifyAgeMock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b5061018a6100ae604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b6105e1806101975f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80634d13e4c01461004e57806379edfd2614610063578063895fae8614610076578063da1f12ab146100b0575b5f5ffd5b61006161005c36600461046f565b6100b8565b005b610061610071366004610492565b610118565b61009e610084366004610509565b6001600160a01b03165f9081526020819052604090205490565b60405190815260200160405180910390f35b61271161009e565b5f6100c2826101bc565b335f81815260208181526040918290208490559051601263ffffffff87161015815292935090917f0f977ef4f521adaafc44cfe1987be6b429382a949911bb7ee02246ffcd87bf94910160405180910390a25050565b5f6101588484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506101d492505050565b335f9081526020819052604090208190559050610174816101e8565b5061017f81336101f7565b506040516001815233907f0f977ef4f521adaafc44cfe1987be6b429382a949911bb7ee02246ffcd87bf949060200160405180910390a250505050565b5f6101ce8263ffffffff166004610209565b92915050565b5f6101e1838360046102c6565b9392505050565b5f6101f382306103e6565b5090565b5f61020283836103e6565b5090919050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb9061027e908790879060040161054f565b6020604051808303815f875af115801561029a573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102be9190610563565b949350505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b9061033f90889033908990899060040161057a565b6020604051808303815f875af115801561035b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037f9190610563565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b1580156103c8575f5ffd5b505af11580156103da573d5f5f3e3d5ffd5b50505050509392505050565b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610454575f5ffd5b505af1158015610466573d5f5f3e3d5ffd5b50505050505050565b5f6020828403121561047f575f5ffd5b813563ffffffff811681146101e1575f5ffd5b5f5f5f604084860312156104a4575f5ffd5b83359250602084013567ffffffffffffffff8111156104c1575f5ffd5b8401601f810186136104d1575f5ffd5b803567ffffffffffffffff8111156104e7575f5ffd5b8660208284010111156104f8575f5ffd5b939660209190910195509293505050565b5f60208284031215610519575f5ffd5b81356001600160a01b03811681146101e1575f5ffd5b6054811061054b57634e487b7160e01b5f52602160045260245ffd5b9052565b828152604081016101e1602083018461052f565b5f60208284031215610573575f5ffd5b5051919050565b8481526001600160a01b0384166020820152608060408201525f8351806080840152806020860160a085015e5f60a0828501015260a0601f19601f8301168401019150506105cb606083018461052f565b9594505050505056fea164736f6c634300081b000a";

type AgeVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AgeVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AgeVerifier__factory extends ContractFactory {
  constructor(...args: AgeVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AgeVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AgeVerifier__factory {
    return super.connect(runner) as AgeVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AgeVerifierInterface {
    return new Interface(_abi) as AgeVerifierInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AgeVerifier {
    return new Contract(address, _abi, runner) as unknown as AgeVerifier;
  }
}
